---
interface Props {
	name: string;
}

interface Type {
	type: {
		name: string;
	}
}

const { name } = Astro.props;
const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);
const data = await response.json();
const image = data.sprites.other.dream_world.front_default;
const types = data.types;
---

<div class="card bg-base-200 w-full shadow-xl cursor-pointer" onclick={`window.location.href = '/pokemons/${name}'`}>
  <figure>
    <img src={image} alt={name} class="h-48 w-auto pt-8"/>
  </figure>
  <div class="card-body">
    <h2 class="card-title">
      {name}
      <div class="badge badge-secondary">NEW</div>
    </h2>
    <p>If a dog chews shoes whose shoes does he choose?</p>
    <div class="card-actions justify-end">
			{types.map((type: Type) => (
        <div class="badge badge-outline">{type.type.name}</div>
      ))}
    </div>
  </div>
</div>